name: UAT Deploy (pick labeled PRs)

on:
  workflow_run:
    workflows: ["Auto Tag from Merge"]
    types: [completed]

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: uat
  cancel-in-progress: true

jobs:
  build-and-push-uat:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'uat' }}
    runs-on: ubuntu-latest
    outputs:
      docker_tag: ${{ steps.settag.outputs.docker_tag }}
      should_deploy: ${{ steps.collect.outputs.has_prs }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
          fetch-depth: 0

      - name: Configure Git identity (needed for cherry-pick)
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Ensure jq and gh are available
        run: |
          sudo apt-get update
          sudo apt-get install -y jq gh

      - name: Collect merged PRs labeled promote:uat not yet in UAT
        id: collect
        env:
          GH_TOKEN: ${{ github.token }}
          REPO: ${{ github.repository }}
        shell: bash
        run: |
          set -euo pipefail
          BASE=uat
          git fetch origin "$BASE" --prune --tags

          # Merged PRs to develop with the label
          gh pr list --repo "$REPO" --state merged \
            --search 'label:"promote:uat" base:develop' --limit 200 \
            --json number,mergeCommit,mergedAt \
          | jq -r 'map(select(.mergeCommit != null)) | sort_by(.mergedAt) | .[] | "\(.number) \(.mergeCommit.oid) \(.mergedAt)"' \
          > /tmp/all.txt

          : > /tmp/todo.txt
          while read -r num sha mergedAt; do
            [ -z "${num:-}" ] && continue
            if git merge-base --is-ancestor "$sha" "origin/$BASE"; then
              echo "PR #$num already in $BASE"
            else
              echo "$num $sha" >> /tmp/todo.txt
            fi
          done < /tmp/all.txt

          if [ -s /tmp/todo.txt ]; then
            paste -sd, /tmp/todo.txt | sed 's/^/pairs=/' >> "$GITHUB_OUTPUT"
            cut -d' ' -f1 /tmp/todo.txt | paste -sd, - | sed 's/^/prs=/' >> "$GITHUB_OUTPUT"
            echo "has_prs=true" >> "$GITHUB_OUTPUT"
            echo "PRs to cherry-pick:"; cat /tmp/todo.txt
          else
            echo "pairs=" >> "$GITHUB_OUTPUT"
            echo "prs=" >> "$GITHUB_OUTPUT"
            echo "has_prs=false" >> "$GITHUB_OUTPUT"
            echo "No new labeled PRs to include."
          fi

      - name: Prepare ephemeral UAT composition
        id: pick
        if: ${{ steps.collect.outputs.has_prs == 'true' }}
        shell: bash
        env:
          BASE_BRANCH: uat
          DEV_BRANCH: develop
        run: |
          set -euo pipefail
          git checkout -B uat-ephemeral "origin/${BASE_BRANCH}"
          git fetch origin "${DEV_BRANCH}" --prune

          INCLUDED=(); SKIPPED=()
          IFS=',' read -ra ITEMS <<< "${{ steps.collect.outputs.pairs }}"
          for item in "${ITEMS[@]}"; do
            num="${item%% *}"; sha="${item##* }"
            echo ""
            echo "=== PR #$num ($sha) ==="

            git fetch --no-tags --force origin "$sha" || true

            if git merge-base --is-ancestor "$sha" HEAD; then
              echo "Already included; skipping."
              INCLUDED+=("$num"); continue
            fi

            parents=( $(git cat-file -p "$sha" | awk '/^parent /{print $2}') )
            pcount=${#parents[@]}
            if [ "$pcount" -ge 2 ]; then
              mparent=1
              for i in "${!parents[@]}"; do
                if git merge-base --is-ancestor "${parents[$i]}" "origin/${DEV_BRANCH}"; then
                  mparent=$((i+1)); break
                fi
              done
              echo "Merge commit; using -m $mparent (develop parent)."
              if git cherry-pick -x -m "$mparent" "$sha"; then
                INCLUDED+=("$num")
              else
                echo "Conflict; aborting this pick."
                git cherry-pick --abort || true
                SKIPPED+=("$num")
              fi
            else
              echo "Single-parent; simple cherry-pick."
              if git cherry-pick -x "$sha"; then
                INCLUDED+=("$num")
              else
                echo "Conflict; aborting this pick."
                git cherry-pick --abort || true
                SKIPPED+=("$num")
              fi
            fi
          done

          echo "included=$(IFS=,; echo "${INCLUDED[*]-}")" >> "$GITHUB_OUTPUT"
          echo "skipped=$(IFS=,; echo "${SKIPPED[*]-}")" >> "$GITHUB_OUTPUT"

      - name: Show pick summary
        if: ${{ steps.collect.outputs.has_prs == 'true' }}
        run: |
          echo "Included PRs: ${{ steps.pick.outputs.included }}"
          echo "Skipped  PRs: ${{ steps.pick.outputs.skipped }}"

      - name: Set Docker tag
        id: settag
        if: ${{ steps.collect.outputs.has_prs == 'true' }}
        shell: bash
        run: |
          set -euo pipefail
          git fetch --tags --force
          BR="${{ github.event.workflow_run.head_branch }}"
          TAG=$(git tag --sort=-creatordate | grep -E "^(${BR})-v[0-9]+\.[0-9]+\.[0-9]+$" | head -n 1 || true)
          if [ -z "${TAG:-}" ]; then
            SHORT_SHA="$(git rev-parse --short=7 ${{ github.event.workflow_run.head_sha }})"
            TAG="uat-$(date -u +%Y%m%d)-${SHORT_SHA}"
            echo "No semver tag for '${BR}'. Fallback: ${TAG}"
          fi
          echo "docker_tag=${TAG}" >> "$GITHUB_OUTPUT"
          echo "Using docker tag: ${TAG}"

      - name: Docker login
        if: ${{ steps.collect.outputs.has_prs == 'true' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push UAT image (ephemeral state)
        if: ${{ steps.collect.outputs.has_prs == 'true' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            apexdev23/sms-gw:${{ steps.settag.outputs.docker_tag }}
            apexdev23/sms-gw:latest-uat

  deploy-uat:
    needs: build-and-push-uat
    if: ${{ needs.build-and-push-uat.outputs.should_deploy == 'true' }}
    runs-on: [self-hosted, uat]
    steps:
      - uses: actions/checkout@v4

      - name: Docker login on server
        shell: bash
        run: |
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Show image tag
        shell: bash
        run: |
          echo "Deploying tag: ${{ needs.build-and-push-uat.outputs.docker_tag }}"

      - name: Deploy App
        shell: bash
        run: |
          cd ~/sms-gw
          ./deploy.sh ${{ needs.build-and-push-uat.outputs.docker_tag }}



name: Docker CI/CD

on:
  workflow_run:
    workflows: ["Auto Tag from Merge"]
    types:
      - completed

permissions:
  contents: read

jobs:
  build-and-push:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch tags and extract latest
        id: tag
        run: |
          git fetch --tags
          TAG=$(git tag --sort=-creatordate | grep -E '^(main|uat|develop)-v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
          echo "Detected tag: $TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Set tag branch type
        id: env
        run: |
          TAG="${{ steps.tag.outputs.tag }}"
          if [[ "$TAG" == main-* ]]; then
            echo "env=main" >> $GITHUB_OUTPUT
          elif [[ "$TAG" == uat-* ]]; then
            echo "env=uat" >> $GITHUB_OUTPUT
          else
            echo "env=develop" >> $GITHUB_OUTPUT
          fi
          echo "docker_tag=$TAG" >> $GITHUB_OUTPUT

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            apexdev23/sms-gw:${{ steps.env.outputs.docker_tag }}
            apexdev23/sms-gw:latest

  deploy:
    needs: build-and-push
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - env: main
            runner: self-hosted main
          - env: uat
            runner: self-hosted uat
          - env: develop
            runner: self-hosted dev

    if: ${{ steps.env.outputs.env == matrix.env }}
    steps:
      - uses: actions/checkout@v4

      - name: Docker login on server
        run: |
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Deploy App
        run: |
          cd ~/sms-gw
          ./deploy.sh "${{ needs.build-and-push.outputs.env__docker_tag }}"
